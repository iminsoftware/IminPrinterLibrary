plugins {
    id 'com.android.library'
    id 'maven-publish'
}

android {
    compileSdk 33

    defaultConfig {
        minSdk 21
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions{
        disable'LongLogTag'
    }
}

dependencies {

  /*implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'*/
}

/**
 * 接口版本号
 */
ext{
    versionCode = 'V2.0.0.16'
}

/**
 * @return formattedDate
 */
def getBuildTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

/**
 *
 * @param isRelease
 * @param isProguard
 * @return buildName
 */
def getBuildName(boolean isRelease) {
    def buildName = "iMinPrinter_SDK2_" +  ext.versionCode + "_" + getBuildTime()
    if(!isRelease) {
        buildName = buildName + "_debug"
    }
    return buildName + ".jar"
}


task makeJar(type: Copy) {
    boolean isRelease = true
    //删除存在的
    delete 'build/libs/'+getBuildName(isRelease)
    //设置拷贝的文件
    //from('build/intermediates/compile_library_classes_jar/release/')
    if(isRelease){
        from('build/intermediates/aar_main_jar/release')
    }else {
        from('build/intermediates/aar_main_jar/debug')
    }
    //打进jar包后的文件目录
    into('build/libs/')
    //将classes.jar放入build/libs/目录下
    //include ,exclude参数来设置过滤
    //（我们只关心classes.jar这个文件）
    include('classes.jar')
    //重命名
    rename ('classes.jar', getBuildName(isRelease))
}
makeJar.dependsOn(build)

afterEvaluate {
    publishing {
        println "afterEvaluta被调用"
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                from components.release
                groupId = 'com.imin.printer'
                artifactId = 'library'
                version = 'V2.0.0.16'
            }
        }
    }
}